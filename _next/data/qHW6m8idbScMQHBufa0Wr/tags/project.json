{"pageProps":{"title":"project","posts":[{"path":"public/Amazon Product Description.md","publish":true,"title":"Amazon Product Description","description":"A proof of concept, Amazon product description generator using GPT-Neo for Texta.ai","date":"Aug 15, 2021","tags":["python","GPT-Neo","web scraping","project"],"content":"\nThis is a proof of concept for an AI that generates Amazon-like product descriptions **that sell**.\n\n![[amazon-product-description.jpeg]]\n\nI was contacted by the founder of [Texta.ai](https://texta.ai/) and asked to recreate thier product that works cheaper. They used GPT-3 from Open AI to generate text descriptions and their price was not cheap enough to make the buisness profitable.\n\nI started of by scraping data with Puppeteer from top Amazon products, but that turned out to be a bit of a challenge. Their websites took a tremendous amount of time to load and the scraping process was not very efficient. That's why I changed to a scrapped [dataset](https://jmcauley.ucsd.edu/data/amazon/) by UCSD. All the collected data was cleaned and shaped into prompt templates.\n\nAfter the data was ready, I finetuned multiple [GPT-Neo](https://www.eleuther.ai/projects/gpt-neo/) models using the [Happy Transformer](https://happytransformer.com/) library on Google Colab.\n\n## Results\n\nFrom the following input:\n\n```python\ncategory = \"Sports and Outdoors\"\nshort = \"5.25 x 3 x 5.5 inches, 1 pounds, Fit and Fresh, 336KFF, #6 in Sports & Outdoors (See Top 100 in Sports & Outdoors) #1 in Camping Cooler Accessories, , SLIM ICE PACKS, COMPACT DESIGN, LONG-LASTING, HEALTHY AND SAFE\"\ntitle = \"Fit & Fresh Cool Coolers Reusable Ice Packs, Set of 4, Clear, Package may vary\"\nn_examples = 5\n```\n\nthe model generated the following product description:\n\n> **>>>** Fit-Fresh Cooling is a great way to stay cool in your outdoor life and use it on a variety of outdoor activities. The frozen-cooler is made with a reusable ice pack that can be used as a cool-down item or\n>\n> **>>>** Fit&Fresh Cooling is a lightweight, portable ice pack that fits on most patio decks. It is designed in a compact package with a clean, clean fit and fresh design. It contains 4 stainless steel bottles, as well as a large metal\n>\n> **>>>** - Fit Ice Pack 2.0oz. IcePack 4.8oz Icepack 1.6oz ice pack Package included\n>\n> **>>>** 1. The Fit&Fresh Cooling Reusable Ice Pack with the Fresh and Clear Package is easy to clean, durable, and contains enough ice to last you for years 2. Each pack contains 3.6 ounces of ice,\n>\n> **>>>** Fit&Fresh is a cool new and easy-to-use ice pack that's easy to clean, and a great ice scraper that helps you remove ice from your water bottles. Its perfect for cleaning and having a blast with your family.\n","md":"<p>This is a proof of concept for an AI that generates Amazon-like product descriptions <strong>that sell</strong>.</p>\n<p>![[amazon-product-description.jpeg]]</p>\n<p>I was contacted by the founder of <a href=\"https://texta.ai/\">Texta.ai</a> and asked to recreate thier product that works cheaper. They used GPT-3 from Open AI to generate text descriptions and their price was not cheap enough to make the buisness profitable.</p>\n<p>I started of by scraping data with Puppeteer from top Amazon products, but that turned out to be a bit of a challenge. Their websites took a tremendous amount of time to load and the scraping process was not very efficient. That’s why I changed to a scrapped <a href=\"https://jmcauley.ucsd.edu/data/amazon/\">dataset</a> by UCSD. All the collected data was cleaned and shaped into prompt templates.</p>\n<p>After the data was ready, I finetuned multiple <a href=\"https://www.eleuther.ai/projects/gpt-neo/\">GPT-Neo</a> models using the <a href=\"https://happytransformer.com/\">Happy Transformer</a> library on Google Colab.</p>\n<h2>Results</h2>\n<p>From the following input:</p>\n<pre><code class=\"hljs language-python\">category = <span class=\"hljs-string\">&quot;Sports and Outdoors&quot;</span>\nshort = <span class=\"hljs-string\">&quot;5.25 x 3 x 5.5 inches, 1 pounds, Fit and Fresh, 336KFF, #6 in Sports &amp; Outdoors (See Top 100 in Sports &amp; Outdoors) #1 in Camping Cooler Accessories, , SLIM ICE PACKS, COMPACT DESIGN, LONG-LASTING, HEALTHY AND SAFE&quot;</span>\ntitle = <span class=\"hljs-string\">&quot;Fit &amp; Fresh Cool Coolers Reusable Ice Packs, Set of 4, Clear, Package may vary&quot;</span>\nn_examples = <span class=\"hljs-number\">5</span>\n</code></pre>\n<p>the model generated the following product description:</p>\n<blockquote>\n<p><strong>&gt;&gt;&gt;</strong> Fit-Fresh Cooling is a great way to stay cool in your outdoor life and use it on a variety of outdoor activities. The frozen-cooler is made with a reusable ice pack that can be used as a cool-down item or</p>\n<p><strong>&gt;&gt;&gt;</strong> Fit&amp;Fresh Cooling is a lightweight, portable ice pack that fits on most patio decks. It is designed in a compact package with a clean, clean fit and fresh design. It contains 4 stainless steel bottles, as well as a large metal</p>\n<p><strong>&gt;&gt;&gt;</strong> - Fit Ice Pack 2.0oz. IcePack 4.8oz Icepack 1.6oz ice pack Package included</p>\n<p><strong>&gt;&gt;&gt;</strong> 1. The Fit&amp;Fresh Cooling Reusable Ice Pack with the Fresh and Clear Package is easy to clean, durable, and contains enough ice to last you for years 2. Each pack contains 3.6 ounces of ice,</p>\n<p><strong>&gt;&gt;&gt;</strong> Fit&amp;Fresh is a cool new and easy-to-use ice pack that’s easy to clean, and a great ice scraper that helps you remove ice from your water bottles. Its perfect for cleaning and having a blast with your family.</p>\n</blockquote>\n"},{"path":"public/Anime RecSys.md","publish":true,"title":"Anime RecSys","description":"Development and comparison of user-item recommendation systems in TensorFlow on an anime dataset.","date":"Sep 1, 2021","tags":["tensorflow","keras","anime","recommendation-system","project"],"content":"\n![banner](https://github.com/nomomon/Anime-RecSys/raw/main/images/banner.png)\n","md":"<p><img src=\"https://github.com/nomomon/Anime-RecSys/raw/main/images/banner.png\" alt=\"banner\"></p>\n"},{"path":"public/Bayes Feed.md","publish":true,"title":"Bayes Feed","description":"An RSS feed with a Naive Bayes recommender that is learning online.","date":"17 Dec, 2022","tags":["next.js","firebase","materialui","vercel","project"],"content":"\n![[bayes-feed.jpeg]]\n\n[RSS feeds](https://ru.wikipedia.org/wiki/RSS) are a convenient and old–fashioned way to follow blogs and websites. \n\nThis December, I returned to reading as my main source of getting information. In doing so, I came across a recommendation system with a Naive Bayes classifier, which was used to filter an RSS feed. This inspired me to create a similar application for myself.\n\nThe idea of the project is to collect posts from RSS feeds, use the classifier to predict whether I will like the post or not, and then train the algorithm on my reactions. Hence, this algorithm is learning in [online mode](https://en.wikipedia.org/wiki/Online_machine_learning).\n\nAt first I used a Telegram bot as an interface, but I encountered a lot of errors and inconveniences when parsing messages. I also used PocketBase for the backend, but it turned out that it is still in beta and query functions I needed were not available. As the result, I changed the stack to Next.js with MUI for frontend and Firebase for backend.\n\nUpdate\n---\n\nWith the latest update, I've made it easier and more efficient for users to access and filter their news.\n\nOne of the major updates I've made is the addition of authentication. Now, users can create their own accounts and have all their data stored in a single object, making it easier to query and manage.\n\nI've also streamlined the process of retrieving data by making all necessary requests in a single request. This not only makes the process faster, but it also helps stay within the Firebase free limit. \n\nBut that's not all - I've also improved the functionality of our Naive Bayes classifier. Rather than simply classifying articles as either liked or not liked, it now considers the approximate probability of a user liking an article. This gives users a more personalized experience and helps them find the content that is most relevant to them.\n\nFinally, I've hosted the app on Vercel, a reliable and user-friendly platform. The only issue I've encountered is the limitation of 12 requests for server functions on the free plan. While I understand that paying the $20/month fee will make the app be perfect, I cannot afford that for a personal use project.\n\nOverall, I'm confident that my RSS feed application will provide users with a valuable and enjoyable experience. I hope you'll give it a try and see for yourself!","md":"<p>![[bayes-feed.jpeg]]</p>\n<p><a href=\"https://ru.wikipedia.org/wiki/RSS\">RSS feeds</a> are a convenient and old–fashioned way to follow blogs and websites.</p>\n<p>This December, I returned to reading as my main source of getting information. In doing so, I came across a recommendation system with a Naive Bayes classifier, which was used to filter an RSS feed. This inspired me to create a similar application for myself.</p>\n<p>The idea of the project is to collect posts from RSS feeds, use the classifier to predict whether I will like the post or not, and then train the algorithm on my reactions. Hence, this algorithm is learning in <a href=\"https://en.wikipedia.org/wiki/Online_machine_learning\">online mode</a>.</p>\n<p>At first I used a Telegram bot as an interface, but I encountered a lot of errors and inconveniences when parsing messages. I also used PocketBase for the backend, but it turned out that it is still in beta and query functions I needed were not available. As the result, I changed the stack to Next.js with MUI for frontend and Firebase for backend.</p>\n<h2>Update</h2>\n<p>With the latest update, I’ve made it easier and more efficient for users to access and filter their news.</p>\n<p>One of the major updates I’ve made is the addition of authentication. Now, users can create their own accounts and have all their data stored in a single object, making it easier to query and manage.</p>\n<p>I’ve also streamlined the process of retrieving data by making all necessary requests in a single request. This not only makes the process faster, but it also helps stay within the Firebase free limit.</p>\n<p>But that’s not all - I’ve also improved the functionality of our Naive Bayes classifier. Rather than simply classifying articles as either liked or not liked, it now considers the approximate probability of a user liking an article. This gives users a more personalized experience and helps them find the content that is most relevant to them.</p>\n<p>Finally, I’ve hosted the app on Vercel, a reliable and user-friendly platform. The only issue I’ve encountered is the limitation of 12 requests for server functions on the free plan. While I understand that paying the $20/month fee will make the app be perfect, I cannot afford that for a personal use project.</p>\n<p>Overall, I’m confident that my RSS feed application will provide users with a valuable and enjoyable experience. I hope you’ll give it a try and see for yourself!</p>\n"},{"path":"public/Felony Felines.md","publish":true,"title":"Felony Felines","description":"Felony Felines is a local multiplayer top-down wave-based survival shooter in which 2 players fight an endless army of robots in the spirit of Box Head 2-Play","date":"Jan 2, 2022","tags":["godot","project"],"content":"\n![[felony-felines.jpeg]]\n","md":"<p>![[felony-felines.jpeg]]</p>\n"},{"path":"public/Inversive Geometry.md","publish":true,"title":"Inversive Geometry","description":"React.js app that visually demonstrates the inversive geometry transformation of a point in a circle on a given image.","date":"12 Aug, 2022","tags":["react","node.js","math","project"],"content":"\nGeometrical inversion is defined as\n\n> For some point $O$, and radius $R$, geometrical inversion – is a plane transformation where each point $P$ is mapped to a point $P'$, which lies on ray $OP$ and satisfies\n> $$OP \\times OP' = R^2.$$\n\nThis gives rise to an amazing tool to solve olympiad geometric problems.\n\nBack in highschool, I tried to make a program that performs inversion on images. I did succeed, but it seems I lost the code. In general _it was not user-friendly_ because it worked through the terminal.\n\nSo, here I am, recreating my dream program as a webapp. This was an interesting project and along the way I came up with a nice optimization that makes the code easy to read.\n\nWorking with pixels made the coordinates descrete and to improve the quality of the image I took an average of pixel colors that were mapped to a single point. Instead of taking their mean, I took the root mean squared because that is [how pixel colors should be added](https://www.youtube.com/watch?v=LKnqECcg6Gw&ab_channel=minutephysics).\n\n## A few notes\n\n- If you look at the inversed image, you will see that there are spots with missing pixels. This is because these pixels were mapped outside of the image boudaries (and hence lost).\n- The image pixelates quickly, this is because when inverted, multiple pixels outside the circle of inversion are mapped to a pixel inside the circle.\n- For the future, it would be cool to add an animation that shows how each pixel is translated.\n\n## Demo\n\nThis is an example of how the image is inverted. What you can notice is ...\n\n- Points inside the circle are mapped to points outside the circle.\n- By the property of inversion, points $A$ and $A'$ change places, same goes for $B$ and $B'$.\n- Points on the dotted circle change thier place, but the dotted circle as a shape doesnot change its place.\n- Lines that were not passing through the center of inversion transformed into semicircles that do pass through the center of inversion.\n\n![demo](https://github.com/nomomon/inversive-geometry/raw/master/demo.gif)\n","md":"<p>Geometrical inversion is defined as</p>\n<blockquote>\n<p>For some point <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.643ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 763 726\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\" style=\"stroke-width: 3;\"/></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi></math></mjx-assistive-mml></mjx-container>, and radius <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.048ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 704\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\" style=\"stroke-width: 3;\"/></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>R</mi></math></mjx-assistive-mml></mjx-container>, geometrical inversion – is a plane transformation where each point <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\" style=\"stroke-width: 3;\"/></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>P</mi></math></mjx-assistive-mml></mjx-container> is mapped to a point <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.452ex\" height=\"1.717ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 1083.9 759\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(839.5,363) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\" style=\"stroke-width: 3;\"/></g></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msup><mi>P</mi><mo data-mjx-alternate=\"1\">′</mo></msup></math></mjx-assistive-mml></mjx-container>, which lies on ray <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.425ex\" height=\"1.643ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 1514 726\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(763,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\" style=\"stroke-width: 3;\"/></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mi>P</mi></math></mjx-assistive-mml></mjx-container> and satisfies</p>\n<mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\" style=\"direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.72ex\" height=\"2.185ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -883.9 7390.5 965.9\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(763,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(1736.2,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(2736.4,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"msup\" transform=\"translate(3499.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(839.5,413) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\" style=\"stroke-width: 3;\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(4861.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"msup\" transform=\"translate(5916.9,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mn\" transform=\"translate(792,413) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\" style=\"stroke-width: 3;\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(7112.5,0)\"><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" style=\"stroke-width: 3;\"/></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"block\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><mi>O</mi><mi>P</mi><mo>×</mo><mi>O</mi><msup><mi>P</mi><mo data-mjx-alternate=\"1\">′</mo></msup><mo>=</mo><msup><mi>R</mi><mn>2</mn></msup><mo>.</mo></math></mjx-assistive-mml></mjx-container></blockquote>\n<p>This gives rise to an amazing tool to solve olympiad geometric problems.</p>\n<p>Back in highschool, I tried to make a program that performs inversion on images. I did succeed, but it seems I lost the code. In general <em>it was not user-friendly</em> because it worked through the terminal.</p>\n<p>So, here I am, recreating my dream program as a webapp. This was an interesting project and along the way I came up with a nice optimization that makes the code easy to read.</p>\n<p>Working with pixels made the coordinates descrete and to improve the quality of the image I took an average of pixel colors that were mapped to a single point. Instead of taking their mean, I took the root mean squared because that is <a href=\"https://www.youtube.com/watch?v=LKnqECcg6Gw&amp;ab_channel=minutephysics\">how pixel colors should be added</a>.</p>\n<h2>A few notes</h2>\n<ul>\n<li>If you look at the inversed image, you will see that there are spots with missing pixels. This is because these pixels were mapped outside of the image boudaries (and hence lost).</li>\n<li>The image pixelates quickly, this is because when inverted, multiple pixels outside the circle of inversion are mapped to a pixel inside the circle.</li>\n<li>For the future, it would be cool to add an animation that shows how each pixel is translated.</li>\n</ul>\n<h2>Demo</h2>\n<p>This is an example of how the image is inverted. What you can notice is …</p>\n<ul>\n<li>Points inside the circle are mapped to points outside the circle.</li>\n<li>By the property of inversion, points <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\" style=\"stroke-width: 3;\"/></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>A</mi></math></mjx-assistive-mml></mjx-container> and <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.325ex\" height=\"1.717ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 1027.5 759\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(783,363) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\" style=\"stroke-width: 3;\"/></g></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msup><mi>A</mi><mo data-mjx-alternate=\"1\">′</mo></msup></math></mjx-assistive-mml></mjx-container> change places, same goes for <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\" style=\"stroke-width: 3;\"/></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>B</mi></math></mjx-assistive-mml></mjx-container> and <mjx-container class=\"MathJax\" jax=\"SVG\" style=\"direction: ltr; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.345ex\" height=\"1.717ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 1036.5 759\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(792,363) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\" style=\"stroke-width: 3;\"/></g></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"inline\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msup><mi>B</mi><mo data-mjx-alternate=\"1\">′</mo></msup></math></mjx-assistive-mml></mjx-container>.</li>\n<li>Points on the dotted circle change thier place, but the dotted circle as a shape doesnot change its place.</li>\n<li>Lines that were not passing through the center of inversion transformed into semicircles that do pass through the center of inversion.</li>\n</ul>\n<p><img src=\"https://github.com/nomomon/inversive-geometry/raw/master/demo.gif\" alt=\"demo\"></p>\n"},{"path":"public/Kamernet Puppeteer.md","publish":true,"title":"Kamernet Puppeteer","description":"Automatic message sender to new adverts on Kamernet using puppeteer.","date":"May 2021","tags":["node.js","puppeteer","project"],"content":"\n![[kamernet-puppeteer.jpeg]]\n\nDutch universities do not provide accommodation, but help international students in their search. They provide services like SSH, funda, Pararius, ROOM, ect.\n\nKamernet is one of these platforms. When I began using it, I quickly understood that it is very competetive, and it's not me who chooses a home, but a home (landlord) chooses me. Many landlord have said that they are looking for a Dutch student, or that they need people now, or they say that somebody replied earlier.\n\nSending out messages by hand was a difficult and time consuming task. So, the most obvious solution was make a bot message to every home and hope that I get to a viewing.\n\n## Solution\n\nKamernet Puppeteer is such a bot, it uses Puppeteer (duh.) to automate the process of sending out messages. It turned on every 5 minutes to check if there are any new adverts and this way I would be one of the first to respond.\n\n## Results\n\nI was invited to a few homes, but the deals would not work out. However, through it, I met my future best friend, who helped me to get a room at their house :)\n","md":"<p>![[kamernet-puppeteer.jpeg]]</p>\n<p>Dutch universities do not provide accommodation, but help international students in their search. They provide services like SSH, funda, Pararius, ROOM, ect.</p>\n<p>Kamernet is one of these platforms. When I began using it, I quickly understood that it is very competetive, and it’s not me who chooses a home, but a home (landlord) chooses me. Many landlord have said that they are looking for a Dutch student, or that they need people now, or they say that somebody replied earlier.</p>\n<p>Sending out messages by hand was a difficult and time consuming task. So, the most obvious solution was make a bot message to every home and hope that I get to a viewing.</p>\n<h2>Solution</h2>\n<p>Kamernet Puppeteer is such a bot, it uses Puppeteer (duh.) to automate the process of sending out messages. It turned on every 5 minutes to check if there are any new adverts and this way I would be one of the first to respond.</p>\n<h2>Results</h2>\n<p>I was invited to a few homes, but the deals would not work out. However, through it, I met my future best friend, who helped me to get a room at their house :)</p>\n"},{"path":"public/LaTeXGen.md","publish":true,"title":"LaTeXGen","description":"Webapp that allows creation of self-generating mathematical problems in LaTeX and markdown languages using JavaScript.","date":"Thu Mar 05 2020 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":["html&css","javascript","latex","project","competition"],"content":"\n![[latexgen-preview.jpeg]]\n\n[Old version of the project](https://chickenburger.nomomon.repl.co/)\n\n## Achievements\n\n1. [2nd place in the international competition in research by students «Research start 2019/2020»](https://eee-science.ru/item-work/2020-3535/)\n\n2. [2nd place in the «Science. Technology. Algorithmization. Programming» competition](https://almaty.fizmat.kz/news/rezultaty-mezhdunarodnoy-konferenci/)\n","md":"<p>![[latexgen-preview.jpeg]]</p>\n<p><a href=\"https://chickenburger.nomomon.repl.co/\">Old version of the project</a></p>\n<h2>Achievements</h2>\n<ol>\n<li>\n<p><a href=\"https://eee-science.ru/item-work/2020-3535/\">2nd place in the international competition in research by students «Research start 2019/2020»</a></p>\n</li>\n<li>\n<p><a href=\"https://almaty.fizmat.kz/news/rezultaty-mezhdunarodnoy-konferenci/\">2nd place in the «Science. Technology. Algorithmization. Programming» competition</a></p>\n</li>\n</ol>\n"},{"path":"public/Markov Chain Text Generator.md","publish":true,"title":"Markov Chain Text Generator","description":"Text generator written in React.js that uses Markov chains to generate text based on a given input.","date":"Aug 6, 2022","tags":["react","node.js","markov-chain","project"],"content":"\n![banner](/images/projects/markov-chain-text.jpeg)\n\nRecently, I was reading in the Y.Practicum blog and found a [group of posts](https://thecode.media/markov-chain/) there about Markov chains. The articles were written in a easy to understand and engaging way, and I thought it would be interesting to see for myself how the algorithm works.\n\nFirst of all, the definition:\n\n> Markov chains are a sequence of events or actions, where each new event depends only on the previous one and does not take into account all other events. Such an algorithm does not remember what happened before, but only looks at the previous state.\n\nIt will be easier to understand if you look at the following example:\n\n```javascript\nconst dataset = [\"I am a human\", \"I am a programmer\", \"I am not a dog\"];\n```\n\nThis dataset results in the following tree diagram:\n\n![](/images/projects/markov-chain-text/diagram.png)\n\nIn context of text generation, each word is an event. The next word is selected randomly from the words that stood after the last word. The probability of each word transition is determined by the frequency of the pair. After a random word is selected, the same thing is repeated with the sentence until the final word appears.\n\nIn the example from the image, after the word “a” in the source text there could be the words “programmer”, “human”, and “dog”. So, the new sentences that can be generated from the dataset are:\n\n> I am not a programmer\n>\n> I am not a human\n>\n> I am a dog\n\nIt certainly doesn't compare to GPT-3 or Copilot, but the results are sure ridiculous.\n\n## Results\n\nExample in russian\n\n![demo](https://github.com/nomomon/markov-chain-text/raw/master/screenshot.png)\n","md":"<p><img src=\"/images/projects/markov-chain-text.jpeg\" alt=\"banner\"></p>\n<p>Recently, I was reading in the Y.Practicum blog and found a <a href=\"https://thecode.media/markov-chain/\">group of posts</a> there about Markov chains. The articles were written in a easy to understand and engaging way, and I thought it would be interesting to see for myself how the algorithm works.</p>\n<p>First of all, the definition:</p>\n<blockquote>\n<p>Markov chains are a sequence of events or actions, where each new event depends only on the previous one and does not take into account all other events. Such an algorithm does not remember what happened before, but only looks at the previous state.</p>\n</blockquote>\n<p>It will be easier to understand if you look at the following example:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> dataset = [<span class=\"hljs-string\">&quot;I am a human&quot;</span>, <span class=\"hljs-string\">&quot;I am a programmer&quot;</span>, <span class=\"hljs-string\">&quot;I am not a dog&quot;</span>];\n</code></pre>\n<p>This dataset results in the following tree diagram:</p>\n<p><img src=\"/images/projects/markov-chain-text/diagram.png\" alt=\"\"></p>\n<p>In context of text generation, each word is an event. The next word is selected randomly from the words that stood after the last word. The probability of each word transition is determined by the frequency of the pair. After a random word is selected, the same thing is repeated with the sentence until the final word appears.</p>\n<p>In the example from the image, after the word “a” in the source text there could be the words “programmer”, “human”, and “dog”. So, the new sentences that can be generated from the dataset are:</p>\n<blockquote>\n<p>I am not a programmer</p>\n<p>I am not a human</p>\n<p>I am a dog</p>\n</blockquote>\n<p>It certainly doesn’t compare to GPT-3 or Copilot, but the results are sure ridiculous.</p>\n<h2>Results</h2>\n<p>Example in russian</p>\n<p><img src=\"https://github.com/nomomon/markov-chain-text/raw/master/screenshot.png\" alt=\"demo\"></p>\n"},{"path":"public/Molecule Energy Estimator.md","publish":true,"title":"Molecule Energy Estimator","description":"The chemical and physical properties of a molecule are determined not only by its structural formula, but also by its conformation – positions of atoms in 3d space.","date":"1 Apr, 2022","tags":["tensoflow","pandas","numpy","csp","chemistry","competition","project"],"content":"\n![[rucode-5.0-preview.gif]]\n\nThis project started off from me participating in the [RuCode 5.0](https://rucode.net/) hackathon and then led me to write a research report on the topic. Initially, the problem and data were provided by [Artificial Intelligence Research Institute](https://airi.net/).\n\nThe chemical and physical properties of a molecule are determined not only by its structural formula, but also by its conformation – positions of atoms in 3d space. An important task when working with molecules is the estimation of their energies. Currently avaliable approxiamtion methods, such as [DFT](https://en.wikipedia.org/wiki/Density_functional_theory), have high accuracy but are computationally expensive.\n\nOne proven approach for predicting conformational energies and other chemical and physical properties is the use of GNNs (Graphed Neural Networks) [[Schrödinger network](https://arxiv.org/abs/1706.08566), [Directional Message Passing for Molecular Graphs](https://arxiv.org/abs/2003.03123)].\n\nIn this competition, you need to learn how to predict energy from a three-dimensional representation of a molecule. You will be given a set of conformations for a subsample of molecules from the [MOSES](https://github.com/molecularsets/moses) dataset. For some of the conformations, the energy value will also be given.\n\n## Solution\n\nThe idea of the initial solution was as follows:\n\n1. Energy has two parts: kinetic and potential energy. The kinetic energy will be assumed to be zero because there is no data on molecule is moving. The potential energy is the sum of the potential energies of all the bonds in the molecule. Or, in other words, the potential energy is the sum of function of these two atoms and the distance between them.\n\n$$E = \\sum_{a_i, a_j \\in \\text{molecule}}{f(a_i, a_j, d_{(i, j)})}$$\n\n2. Energy of a bond is defined in small ranges. So, I made an assumption that it is constant for any two types of atoms.\n\n3. To determine if there is a bond, I checked if the distance between two atoms is smaller than the longest bond length possible.\n\n4. Now, the number of each bond can be passed to a neural network to determine the energy of the molecule. The assumption is that, the neural network will determine the energy of each bond and use that to predict the energy of the molecule.\n\nThis is the solution I used in the competition and got to the top 7th place. You can listen to my solution on the [livestream](https://www.youtube.com/watch?v=jGRQjQZg4Ck&t=8577s) (only in russian).\n\n<iframe width=\"560\" height=\"315\" style=\"display:block; margin:auto; margin-bottom:1em; max-width:100%;\" src=\"https://www.youtube.com/embed/jGRQjQZg4Ck?start=8577\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nAfter the competition, I did deeper research into the problem and found that the problem is not simple. The problem is that the energy of a bond is not a constant. Actually, bonds has multiple **descrete** energy levels, which are determined by the distance between two atoms.\n\nSo, I used another way of determining the bond energy level with a constraint satisfaction solver. I proposed new task to my team and they we solved it. Passing the bond energy levels to the neural network gave better results.\n\n## Achievements\n\n- [7th place in Yandex RuCode 5.0](https://www.kaggle.com/competitions/molecular-energy-estimation-rucode/leaderboard)\n\n- [Approximating the energy of molecules from their three-dimensional representations using neural networks](https://nomomon.github.io/molecule-energy-prediction/report/report.pdf)\n","md":"<p>![[rucode-5.0-preview.gif]]</p>\n<p>This project started off from me participating in the <a href=\"https://rucode.net/\">RuCode 5.0</a> hackathon and then led me to write a research report on the topic. Initially, the problem and data were provided by <a href=\"https://airi.net/\">Artificial Intelligence Research Institute</a>.</p>\n<p>The chemical and physical properties of a molecule are determined not only by its structural formula, but also by its conformation – positions of atoms in 3d space. An important task when working with molecules is the estimation of their energies. Currently avaliable approxiamtion methods, such as <a href=\"https://en.wikipedia.org/wiki/Density_functional_theory\">DFT</a>, have high accuracy but are computationally expensive.</p>\n<p>One proven approach for predicting conformational energies and other chemical and physical properties is the use of GNNs (Graphed Neural Networks) [<a href=\"https://arxiv.org/abs/1706.08566\">Schrödinger network</a>, <a href=\"https://arxiv.org/abs/2003.03123\">Directional Message Passing for Molecular Graphs</a>].</p>\n<p>In this competition, you need to learn how to predict energy from a three-dimensional representation of a molecule. You will be given a set of conformations for a subsample of molecules from the <a href=\"https://github.com/molecularsets/moses\">MOSES</a> dataset. For some of the conformations, the energy value will also be given.</p>\n<h2>Solution</h2>\n<p>The idea of the initial solution was as follows:</p>\n<ol>\n<li>Energy has two parts: kinetic and potential energy. The kinetic energy will be assumed to be zero because there is no data on molecule is moving. The potential energy is the sum of the potential energies of all the bonds in the molecule. Or, in other words, the potential energy is the sum of function of these two atoms and the distance between them.</li>\n</ol>\n<mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\" style=\"direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;\"><svg style=\"overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -3.203ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"28.753ex\" height=\"5.352ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -950 12708.8 2365.8\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(1041.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"munder\" transform=\"translate(2097.6,0)\"><g data-mml-node=\"mo\" transform=\"translate(1569.5,0)\"><path data-c=\"2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(0,-1107.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\" style=\"stroke-width: 3;\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(856,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"msub\" transform=\"translate(1134,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\" style=\"stroke-width: 3;\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2037.3,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mtext\" transform=\"translate(2704.3,0)\"><path data-c=\"6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\" style=\"stroke-width: 3;\"/><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(833,0)\" style=\"stroke-width: 3;\"/><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\" transform=\"translate(1333,0)\" style=\"stroke-width: 3;\"/><path data-c=\"65\" d=\"M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z\" transform=\"translate(1611,0)\" style=\"stroke-width: 3;\"/><path data-c=\"63\" d=\"M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z\" transform=\"translate(2055,0)\" style=\"stroke-width: 3;\"/><path data-c=\"75\" d=\"M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z\" transform=\"translate(2499,0)\" style=\"stroke-width: 3;\"/><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\" transform=\"translate(3055,0)\" style=\"stroke-width: 3;\"/><path data-c=\"65\" d=\"M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z\" transform=\"translate(3333,0)\" style=\"stroke-width: 3;\"/></g></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(6847.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(550,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"msub\" transform=\"translate(939,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\" style=\"stroke-width: 3;\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(1795,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"msub\" transform=\"translate(2239.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\" style=\"stroke-width: 3;\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(3142.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"msub\" transform=\"translate(3587.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(553,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(734,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mi\" transform=\"translate(1012,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\" style=\"stroke-width: 3;\"/></g><g data-mml-node=\"mo\" transform=\"translate(1424,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\" style=\"stroke-width: 3;\"/></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5472.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\" style=\"stroke-width: 3;\"/></g></g></g></g></svg><mjx-assistive-mml unselectable=\"on\" display=\"block\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><mi>E</mi><mo>=</mo><munder><mo data-mjx-texclass=\"OP\">∑</mo><mrow data-mjx-texclass=\"ORD\"><msub><mi>a</mi><mi>i</mi></msub><mo>,</mo><msub><mi>a</mi><mi>j</mi></msub><mo>∈</mo><mtext>molecule</mtext></mrow></munder><mrow data-mjx-texclass=\"ORD\"><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo>,</mo><msub><mi>a</mi><mi>j</mi></msub><mo>,</mo><msub><mi>d</mi><mrow data-mjx-texclass=\"ORD\"><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">)</mo></mrow></math></mjx-assistive-mml></mjx-container><ol start=\"2\">\n<li>\n<p>Energy of a bond is defined in small ranges. So, I made an assumption that it is constant for any two types of atoms.</p>\n</li>\n<li>\n<p>To determine if there is a bond, I checked if the distance between two atoms is smaller than the longest bond length possible.</p>\n</li>\n<li>\n<p>Now, the number of each bond can be passed to a neural network to determine the energy of the molecule. The assumption is that, the neural network will determine the energy of each bond and use that to predict the energy of the molecule.</p>\n</li>\n</ol>\n<p>This is the solution I used in the competition and got to the top 7th place. You can listen to my solution on the <a href=\"https://www.youtube.com/watch?v=jGRQjQZg4Ck&amp;t=8577s\">livestream</a> (only in russian).</p>\n<iframe width=\"560\" height=\"315\" style=\"display:block; margin:auto; margin-bottom:1em; max-width:100%;\" src=\"https://www.youtube.com/embed/jGRQjQZg4Ck?start=8577\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p>After the competition, I did deeper research into the problem and found that the problem is not simple. The problem is that the energy of a bond is not a constant. Actually, bonds has multiple <strong>descrete</strong> energy levels, which are determined by the distance between two atoms.</p>\n<p>So, I used another way of determining the bond energy level with a constraint satisfaction solver. I proposed new task to my team and they we solved it. Passing the bond energy levels to the neural network gave better results.</p>\n<h2>Achievements</h2>\n<ul>\n<li>\n<p><a href=\"https://www.kaggle.com/competitions/molecular-energy-estimation-rucode/leaderboard\">7th place in Yandex RuCode 5.0</a></p>\n</li>\n<li>\n<p><a href=\"https://nomomon.github.io/molecule-energy-prediction/report/report.pdf\">Approximating the energy of molecules from their three-dimensional representations using neural networks</a></p>\n</li>\n</ul>\n"},{"path":"public/Orama Visual Assistant.md","publish":true,"title":"Orama Visual Assistant","description":"Orama Visual Assistant is an app for visually impaired people that announces objects detected using user's phone camera.","date":"8 Nov 2019","tags":["tensorflow","mobilenet","react","competition","project"],"content":"\n![[oramava-preview.jpeg]]\n","md":"<p>![[oramava-preview.jpeg]]</p>\n"},{"path":"public/Pipe Thickness Calculator.md","publish":true,"title":"Pipe Thickness Calculator","description":"Application for calculating pipe thickness based on material properties and exporting calculations into a word document.","date":"Jun 5 2022","tags":["html&css","node.js","electron","github-actions","project"],"content":"\n![[pipe-thickness-calculator.jpeg]]\n\n## Preview\n\nThis is how the application looks.\n\n![title_screen](https://github.com/nomomon/pipe-thickness-calculator/raw/v1.0.0/assets/preview/title_screen.png)\n\nThis is what the resulting word document looks like.\n\n![output_document](https://github.com/nomomon/pipe-thickness-calculator/raw/v1.0.0/assets/preview/output_document.png)\n","md":"<p>![[pipe-thickness-calculator.jpeg]]</p>\n<h2>Preview</h2>\n<p>This is how the application looks.</p>\n<p><img src=\"https://github.com/nomomon/pipe-thickness-calculator/raw/v1.0.0/assets/preview/title_screen.png\" alt=\"title_screen\"></p>\n<p>This is what the resulting word document looks like.</p>\n<p><img src=\"https://github.com/nomomon/pipe-thickness-calculator/raw/v1.0.0/assets/preview/output_document.png\" alt=\"output_document\"></p>\n"},{"path":"public/Potato Cashback.md","publish":true,"title":"Potato Cashback","description":"Accessible loyalty program for stores using just a phone app. Apart from rise of number and average of receipts and analytics, a database of clients is collected, to whom polls and news can sent and special offers can be made.","date":"Jul 17, 2021","tags":["python","flask","mongodb","whatsapp-bot","telegram-bot","project"],"content":"\n<iframe width=\"560\" height=\"315\" style=\"display:block; margin:auto; max-width:100%;\" src=\"https://www.youtube-nocookie.com/embed/nQgOKcyDvzQ?controls=0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","md":"<iframe width=\"560\" height=\"315\" style=\"display:block; margin:auto; max-width:100%;\" src=\"https://www.youtube-nocookie.com/embed/nQgOKcyDvzQ?controls=0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"},{"path":"public/Soft Skills AI.md","publish":true,"title":"Soft Skills AI","description":"Telegram bot that simulates work situations to help HR select people for support. It generates text scenarios using GPT-3 from OpenAI.","date":"9 May 2021","tags":["GPT-3","telegram-bot","competition","project"],"content":"\n![[softskillai-preview.jpeg]]\n","md":"<p>![[softskillai-preview.jpeg]]</p>\n"}]},"__N_SSG":true}